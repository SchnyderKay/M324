name: Docker Build and Test

on:
  push:
    branches:
      - '**'    # Runs on all branches except those containing 'personal'
    paths-ignore:
      - '**personal**'  # Ignore branches containing 'personal'
  pull_request:
    branches:
      - '**'    # Runs on pull requests targeting all branches except those containing 'personal'
    paths-ignore:
      - '**personal**'  # Ignore pull requests from branches containing 'personal'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'corretto'

      - name: Build with Gradle
        run: gradle build -x test
        working-directory: ./DrinkDomain-main/backend/

      - name: Test with Gradle
        run: gradle test
        working-directory: ./DrinkDomain-main/backend/
      
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: ./DrinkDomain-main/backend/build/reports/tests/test/index.html

  upload-build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Pull PostgreSQL image
        run: docker pull postgres

      - name: Build Docker image
        run: docker-compose -f ./DrinkDomain-main/docker-compose.yaml build

      - name: Get image name
        id: get_image_name
        run: |
          IMAGE_NAME=$(docker-compose -f ./DrinkDomain-main/backend/docker-compose.yaml config --services | head -n 1)
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Save Docker image as artifact
        run: docker save $IMAGE_NAME > image.tar

      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: image.tar