name: Docker Build and Test

on:
  push:
    branches:
      - '**'    # Runs on all branches except those containing 'personal'
    paths-ignore:
      - '**personal**'  # Ignore branches containing 'personal'
  pull_request:
    branches:
      - '**'    # Runs on pull requests targeting all branches except those containing 'personal'
    paths-ignore:
      - '**personal**'  # Ignore pull requests from branches containing 'personal'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'corretto'

      - name: Build with Gradle
        run: gradle build -x test
        working-directory: ./DrinkDomain-main/backend/

      - name: Test with Gradle
        run: gradle test
        working-directory: ./DrinkDomain-main/backend/
      
      - name: Upload test report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: ./DrinkDomain-main/backend/build/reports/tests/test/index.html

  upload-build-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      # Pull necessary images before starting Docker Compose
      - name: Pull PostgreSQL image
        run: docker pull postgres

      # Build images for all services defined in docker-compose.yaml
      - name: Build Docker images
        run: docker-compose -f ./DrinkDomain-main/docker-compose.yaml build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: drinkdomainsupporter
          password: TheDrinkDomainIsReallyCool&Functional

      # Tag each image for Docker Hub and push
      - name: Tag and push Docker images
        run: |
          # Define an array of images to tag and push
          IMAGES=("drinkdomainsupporter/frontend" "drinkdomainsupporter/backend")
          
          for IMAGE in "${IMAGES[@]}"; do
            IMAGE_ID=$(docker images -q "${IMAGE}")  # Get image ID by image name
            if [ -n "$IMAGE_ID" ]; then
              # Tag and push to Docker Hub with latest and commit SHA
              docker tag "$IMAGE_ID" "$IMAGE:latest"
              docker tag "$IMAGE_ID" "$IMAGE:${{ github.sha }}"
              docker push "$IMAGE:latest"
              docker push "$IMAGE:${{ github.sha }}"
            else
              echo "Image $IMAGE not found, skipping tagging and push."
            fi
          done


      # Save images as tar files for artifacts
      - name: Save Docker images as artifacts
        run: |
          for SERVICE in "${SERVICES[@]}"; do
            docker save "drinkdomainsupporter/$SERVICE:latest" -o "${SERVICE}_latest.tar"
          done

      - name: Upload Docker images as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docker-images
          path: |
            *.tar
